{"version":3,"sources":["hooks/useStores.ts","components/Common/Card/Card.tsx","components/Main/Main.tsx","containers/MainContainer.tsx","components/Common/NavBar/NavBar.tsx","pages/MainPage.tsx","components/Country/Country.tsx","containers/CountryContainer.tsx","pages/CountryPage.tsx","components/App.tsx","stores/Main/MainRepository.ts","stores/index.ts","stores/Main/MainStore.ts","Root.tsx","index.tsx"],"names":["useStores","useContext","MobXProviderContext","style","require","cx","classNames","bind","observer","message","content","percent","className","coronaData","store","MainStore","TotalCase","TotalCaseBefore","TotalRecovered","recoveredPercentage","NowCase","checkingCounter","TotalDeath","TodayDeath","TotalChecking","city1n","city1p","city2n","city2p","city3n","city3p","city4n","city4p","city5n","city5p","handleGetCoronaData","request","a","useEffect","pageValue","handlePageValue","AppBar","position","color","Tabs","value","onChange","Tab","label","component","Link","to","MainPage","countryCoronaData","seoul","totalCase","newCase","recovered","death","percentage","newCcase","newFcase","daegu","busan","incheon","gwangju","handleGetCountryCoronaData","CountryPage","App","exact","path","render","getCoronaData","axios","get","data","console","log","getCountryCoronaData","stores","autobind","MainRepository","response","runInAction","event","newValue","observable","action","Root","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.98b68c59.chunk.js","sourcesContent":["import { useContext } from 'react';\r\nimport { MobXProviderContext } from 'mobx-react';\r\n\r\nconst useStores = () => {\r\n  return useContext(MobXProviderContext);\r\n};\r\n\r\nexport default useStores;","import classNames from 'classnames';\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst style = require(\"./Card.scss\");\r\nconst cx = classNames.bind(style);\r\n\r\ninterface ICardPropTypes {\r\n  message: string,\r\n  content: string,\r\n  percent: string,\r\n}\r\n\r\nconst Card = ({message, content, percent}: ICardPropTypes):JSX.Element => {\r\n  return (\r\n    <div className={cx('Card')}>\r\n      <div className={cx('Card-Title')}>{message}</div>\r\n      <div className={cx('Card-Content')}>{content}</div>      \r\n      <div className={cx('Card-Percent')}>{percent}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default observer(Card);","import useStores from \"hooks/useStores\";\r\nimport { observer } from \"mobx-react\";\r\nimport Card from 'components/Common/Card';\r\nimport classNames from 'classnames';\r\n\r\nconst style = require(\"./Main.scss\");\r\nconst cx = classNames.bind(style);\r\n\r\nconst Main = () => {\r\n  const { store } = useStores();\r\n  const { coronaData } = store.MainStore;\r\n  return (\r\n    <div className={cx('Main')}>\r\n      <Card message=\"국내 확진자수\" content={coronaData.TotalCase} percent={`전날대비${coronaData.TotalCaseBefore}명 확진`}/>\r\n      <Card message=\"국내 완치자수\" content={coronaData.TotalRecovered} percent={`완치율 ${coronaData.recoveredPercentage}%`} />\r\n      <Card message=\"국내 격리자수\" content={coronaData.NowCase} percent={`현재 ${coronaData.checkingCounter}명 검사중`} />\r\n      <Card message=\"국내 사망자수\" content={coronaData.TotalDeath} percent={`오늘 ${coronaData.TodayDeath}명 사망`}/>\r\n      <Card message=\"총 검사완료\" content={coronaData.TotalChecking} percent=\"빨리 해결되기를 바래요\" />\r\n      <br/>\r\n      <Card message=\"지역별 현황\" content={coronaData.city1n} percent={`${coronaData.city1p}%`}/>\r\n      <Card message=\"지역별 현황\" content={coronaData.city2n} percent={`${coronaData.city2p}%`}/>\r\n      <Card message=\"지역별 현황\" content={coronaData.city3n} percent={`${coronaData.city3p}%`}/>\r\n      <Card message=\"지역별 현황\" content={coronaData.city4n} percent={`${coronaData.city4p}%`}/>\r\n      <Card message=\"지역별 현황\" content={coronaData.city5n} percent={`${coronaData.city5p}%`}/>\r\n      <br/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Main);\r\n","import useStores from \"hooks/useStores\";\r\nimport Main from \"components/Main\";\r\nimport { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst MainContainer = () => {\r\n  const { store } = useStores();\r\n  const { handleGetCoronaData } = store.MainStore;\r\n\r\n  const request = async () => {\r\n    await handleGetCoronaData();\r\n  };\r\n\r\n  useEffect(() => {\r\n    request();\r\n  }, []);\r\n\r\n  return <Main />;\r\n};\r\n\r\nexport default observer(MainContainer);\r\n","import { Tab, Tabs, AppBar } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useStores from \"hooks/useStores\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst NavBar = () => {\r\n  const { store } = useStores();\r\n  const { pageValue, handlePageValue } = store.MainStore;\r\n  return (\r\n    <AppBar position=\"static\" color=\"default\">\r\n      <Tabs value={pageValue} onChange={handlePageValue}>\r\n        <Tab label=\"Main\" component={Link} to=\"/\" />\r\n        <Tab label=\"Country\" component={Link} to=\"/country\" />\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default observer(NavBar);\r\n","import MainContainer from \"containers/MainContainer\";\r\nimport NavBar from \"components/Common/NavBar\";\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <MainContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import useStores from \"hooks/useStores\";\r\nimport { observer } from \"mobx-react\";\r\nimport Card from \"components/Common/Card\";\r\nimport classNames from \"classnames\";\r\nimport { toJS } from \"mobx\";\r\n\r\nconst style = require(\"./Country.scss\");\r\nconst cx = classNames.bind(style);\r\n\r\nconst Country = () => {\r\n  const { store } = useStores();\r\n  const { countryCoronaData } = store.MainStore;\r\n  return (\r\n    <div className={cx(\"Country\")}>\r\n          <div className={cx(\"Country-Title\")}>서울</div>\r\n          <Card\r\n            message=\"확진자\"\r\n            content={`전체${countryCoronaData.seoul.totalCase}`}\r\n            percent={`오늘${countryCoronaData.seoul.newCase}명`}\r\n          />\r\n          <Card\r\n            message=\"완치자\"\r\n            content={`전체${countryCoronaData.seoul.recovered}`}\r\n            percent={`오늘${countryCoronaData.seoul.newCase}명`}\r\n          />\r\n          <Card\r\n            message=\"사망자\"\r\n            content={`전체${countryCoronaData.seoul.death}`}\r\n            percent={`오늘${countryCoronaData.seoul.newCase}명`}\r\n          />\r\n          <br />\r\n          <Card\r\n            message=\"발생률\"\r\n            content={`${countryCoronaData.seoul.percentage}%`}\r\n            percent={`오늘${countryCoronaData.seoul.newCase}명`}\r\n          />\r\n          <Card\r\n            message=\"전일대비\"\r\n            content={`${countryCoronaData.seoul.newCcase}명`}\r\n            percent=\"국내\"\r\n          />\r\n          <Card\r\n            message=\"전일대비\"\r\n            content={`${countryCoronaData.seoul.newFcase}명`}\r\n            percent=\"해외\"\r\n          />\r\n\r\n          <div className={cx(\"Country-Title\")}>대구</div>\r\n          <Card\r\n            message=\"확진자\"\r\n            content={`전체${countryCoronaData.daegu.totalCase}`}\r\n            percent={`오늘${countryCoronaData.daegu.newCase}명`}\r\n          />\r\n          <Card\r\n            message=\"완치자\"\r\n            content={`전체${countryCoronaData.daegu.recovered}`}\r\n            percent={`오늘${countryCoronaData.daegu.newCase}명`}\r\n          />\r\n          <Card\r\n            message=\"사망자\"\r\n            content={`전체${countryCoronaData.daegu.death}`}\r\n            percent={`오늘${countryCoronaData.daegu.newCase}명`}\r\n          />\r\n          <br />\r\n\r\n          <Card\r\n            message=\"발생률\"\r\n            content={`${countryCoronaData.daegu.percentage}%`}\r\n            percent={`오늘${countryCoronaData.daegu.newCase}명`}\r\n          />\r\n          <Card\r\n            message=\"전일대비\"\r\n            content={`${countryCoronaData.daegu.newCcase}명`}\r\n            percent=\"국내\"\r\n          />\r\n          <Card\r\n            message=\"전일대비\"\r\n            content={`${countryCoronaData.daegu.newFcase}명`}\r\n            percent=\"해외\"\r\n          />\r\n\r\n          <div className={cx(\"Country-Title\")}>부산</div>\r\n          <Card\r\n            message=\"확진자\"\r\n            content={`전체${countryCoronaData.busan.totalCase}`}\r\n            percent={`오늘${countryCoronaData.busan.newCase}명`}\r\n          />\r\n          <Card\r\n            message=\"완치자\"\r\n            content={`전체${countryCoronaData.busan.recovered}`}\r\n            percent={`오늘${countryCoronaData.busan.newCase}명`}\r\n          />\r\n          <Card\r\n            message=\"사망자\"\r\n            content={`전체${countryCoronaData.busan.death}`}\r\n            percent={`오늘${countryCoronaData.busan.newCase}명`}\r\n          />\r\n          <br />\r\n\r\n          <Card\r\n            message=\"발생률\"\r\n            content={`${countryCoronaData.busan.percentage}%`}\r\n            percent={`오늘${countryCoronaData.busan.newCase}명`}\r\n          />\r\n          <Card\r\n            message=\"전일대비\"\r\n            content={`${countryCoronaData.busan.newCcase}명`}\r\n            percent=\"국내\"\r\n          />\r\n          <Card\r\n            message=\"전일대비\"\r\n            content={`${countryCoronaData.busan.newFcase}명`}\r\n            percent=\"해외\"\r\n          />\r\n\r\n          <div className={cx(\"Country-Title\")}>인천</div>\r\n          <Card\r\n            message=\"확진자\"\r\n            content={`전체${countryCoronaData.incheon.totalCase}`}\r\n            percent={`오늘${countryCoronaData.incheon.newCase}명`}\r\n          />\r\n          <Card\r\n            message=\"완치자\"\r\n            content={`전체${countryCoronaData.incheon.recovered}`}\r\n            percent={`오늘${countryCoronaData.incheon.newCase}명`}\r\n          />\r\n          <Card\r\n            message=\"사망자\"\r\n            content={`전체${countryCoronaData.incheon.death}`}\r\n            percent={`오늘${countryCoronaData.incheon.newCase}명`}\r\n          />\r\n          <br />\r\n\r\n          <Card\r\n            message=\"발생률\"\r\n            content={`${countryCoronaData.incheon.percentage}%`}\r\n            percent={`오늘${countryCoronaData.incheon.newCase}명`}\r\n          />\r\n          <Card\r\n            message=\"전일대비\"\r\n            content={`${countryCoronaData.incheon.newCcase}명`}\r\n            percent=\"국내\"\r\n          />\r\n          <Card\r\n            message=\"전일대비\"\r\n            content={`${countryCoronaData.incheon.newFcase}명`}\r\n            percent=\"해외\"\r\n          />\r\n\r\n          <div className={cx(\"Country-Title\")}>광주</div>\r\n          <Card\r\n            message=\"확진자\"\r\n            content={`전체${countryCoronaData.gwangju.totalCase}`}\r\n            percent={`오늘${countryCoronaData.gwangju.newCase}명`}\r\n          />\r\n          <Card\r\n            message=\"완치자\"\r\n            content={`전체${countryCoronaData.gwangju.recovered}`}\r\n            percent={`오늘${countryCoronaData.gwangju.newCase}명`}\r\n          />\r\n          <Card\r\n            message=\"사망자\"\r\n            content={`전체${countryCoronaData.gwangju.death}`}\r\n            percent={`오늘${countryCoronaData.gwangju.newCase}명`}\r\n          />\r\n          <br />\r\n\r\n          <Card\r\n            message=\"발생률\"\r\n            content={`${countryCoronaData.gwangju.percentage}%`}\r\n            percent={`오늘${countryCoronaData.gwangju.newCase}명`}\r\n          />\r\n          <Card\r\n            message=\"전일대비\"\r\n            content={`${countryCoronaData.gwangju.newCcase}명`}\r\n            percent=\"국내\"\r\n          />\r\n          <Card\r\n            message=\"전일대비\"\r\n            content={`${countryCoronaData.gwangju.newFcase}명`}\r\n            percent=\"해외\"\r\n          />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(Country);\r\n","import useStores from \"hooks/useStores\";\r\nimport Country from \"components/Country\";\r\nimport { useEffect } from \"react\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst CountryContainer = () => {\r\n  const { store } = useStores();\r\n  const { handleGetCountryCoronaData } = store.MainStore;\r\n  \r\n  const request = async () => {\r\n    await handleGetCountryCoronaData();\r\n  };\r\n  \r\n  useEffect(() => {\r\n    request();\r\n  }, []);\r\n\r\n  return <Country />;\r\n};\r\n\r\nexport default observer(CountryContainer);\r\n","import CountryContainer from \"containers/CountryContainer\";\r\nimport NavBar from \"components/Common/NavBar\";\r\n\r\nconst CountryPage = () => {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <CountryContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CountryPage;\r\n","import { Switch, Route } from \"react-router-dom\";\r\nimport MainPage from \"pages/MainPage\";\r\nimport CountryPage from \"pages/CountryPage\";\r\nconst App = () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" render={() => <MainPage />} />\r\n      <Route exact path=\"/country\" render={() => <CountryPage />} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import axios from \"axios\";\r\n\r\nclass MainRepository {\r\n  getCoronaData = async () => {\r\n    try {\r\n      const { data } = await axios.get(\r\n        \"https://api.corona-19.kr/korea/?serviceKey=v5W3QnydU8w7YLKJm241fFaehITzoqVB9\"\r\n      );\r\n      return data;\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  getCountryCoronaData = async () => {\r\n    try {\r\n      const { data } = await axios.get(\r\n        \"https://api.corona-19.kr/korea/country/new/?serviceKey=v5W3QnydU8w7YLKJm241fFaehITzoqVB9\"\r\n      );\r\n      return data;\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n}\r\n\r\nexport default new MainRepository();\r\n","  \r\nimport MainStore from \"./Main/MainStore\";\r\n\r\nconst stores = {\r\n  MainStore: new MainStore(),\r\n};\r\n\r\nexport default stores;","import { action, observable, runInAction } from \"mobx\";\r\nimport { autobind } from \"core-decorators\";\r\nimport MainRepository from \"./MainRepository\";\r\n\r\n@autobind\r\nclass MainStore {\r\n  @observable coronaData = {};\r\n  @observable countryCoronaData = {\r\n    seoul: {\r\n\r\n    },\r\n    busan: {\r\n\r\n    },\r\n    daegu: {\r\n\r\n    },\r\n    incheon: {\r\n\r\n    },\r\n    gwangju: {\r\n      \r\n    }\r\n  };\r\n  @observable pageValue = 0;\r\n\r\n  @action\r\n  async handleGetCoronaData() {\r\n    const response = await MainRepository.getCoronaData();\r\n    runInAction(() => {\r\n      this.coronaData = response;\r\n    });\r\n  }\r\n  \r\n  @action\r\n  async handleGetCountryCoronaData() {\r\n    const response = await MainRepository.getCountryCoronaData();\r\n    runInAction(() => {\r\n      this.countryCoronaData = response;\r\n    });\r\n  }\r\n\r\n  @action\r\n  handlePageValue(event: any, newValue: any) {\r\n    runInAction(() => {\r\n      this.pageValue = newValue;\r\n    });\r\n  }\r\n}\r\n\r\nexport default MainStore;\r\n","import { Provider } from \"mobx-react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"components/App\";\r\nimport stores from \"stores\";\r\n\r\nconst Root = () => {\r\n  return (\r\n    <Provider store={stores}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default Root;\r\n","import ReactDOM from 'react-dom';\nimport Root from 'Root';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n"],"sourceRoot":""}